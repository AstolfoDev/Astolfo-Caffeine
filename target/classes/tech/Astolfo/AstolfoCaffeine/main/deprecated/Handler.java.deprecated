package tech.Astolfo.AstolfoCaffeine.main.cmd;

import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;

import net.dv8tion.jda.api.entities.Message;
import net.dv8tion.jda.api.events.message.MessageReceivedEvent;
import tech.Astolfo.AstolfoCaffeine.App;
import tech.Astolfo.AstolfoCaffeine.main.cmd.ancap.Buyorder;
import tech.Astolfo.AstolfoCaffeine.main.cmd.ancap.Market;
import tech.Astolfo.AstolfoCaffeine.main.cmd.ancap.Portfolio;
import tech.Astolfo.AstolfoCaffeine.main.cmd.ancap.Sellorder;
import tech.Astolfo.AstolfoCaffeine.main.cmd.business.Create;
import tech.Astolfo.AstolfoCaffeine.main.cmd.economy.Balance;
import tech.Astolfo.AstolfoCaffeine.main.cmd.economy.Pay;
import tech.Astolfo.AstolfoCaffeine.main.cmd.economy.Work;
import tech.Astolfo.AstolfoCaffeine.main.cmd.info.Stats;

public class Handler {

    public void cmd(MessageReceivedEvent e) {


        Message msg = e.getMessage();
        String str_msg = msg.getContentRaw();

        if (!str_msg.startsWith(App.prefix)) return;
        
        str_msg = str_msg.substring(App.prefix.length(), str_msg.length());

        List<String> args = new LinkedList<String>(Arrays.asList(str_msg.split(" ")));
        String cmd = args.get(0).toLowerCase();
        args.remove(0);
        
        switch(cmd) {
            case "ping":
            case "stat":
            case "info":
            case "stats":
                new Stats().run_cmd(msg);
                break;
            case "bal":
            case "wallet":
            case "balance":
                new Balance().run_cmd(msg);
                break;
            case "give":
            case "send":
            case "pay":
                new Pay().run_cmd(msg, args);
                break;
            case "market":
            case "stocks":
            case "aex":
            case "astolfoex":
                new Market().run_cmd(msg);
                break;
            case "buyorder":
            case "buy":
            case "bo":
            case "b":
                new Buyorder().run_cmd(msg, args);
                break;
            case "sellorder":
            case "sell":
            case "so":
            case "s":
                new Sellorder().run_cmd(msg, args);
                break;
            case "portfolio":
            case "inv":
            case "inventory":
            case "shares":
                new Portfolio().run_cmd(msg, args);
                break;
            case "work":
            case "daily":
            case "w":
                new Work().run_cmd(msg);
                break;
            case "create":
                new Create().run_cmd(msg);
                break;
        }
        return;
    } 
}